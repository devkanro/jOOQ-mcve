/*
 * This file is generated by jOOQ.
 */
package org.jooq.mcve.kotlin.mysql.tables.pojos


import org.jooq.mcve.kotlin.mysql.tables.interfaces.IEmail


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
data class Email(
    override var id: Int? = null,
    override var from: String,
    override var to: String
): IEmail {


    override fun equals(other: Any?): Boolean {
        if (this === other)
            return true
        if (other == null)
            return false
        if (this::class != other::class)
            return false
        val o: Email = other as Email
        if (this.id == null) {
            if (o.id != null)
                return false
        }
        else if (this.id != o.id)
            return false
        if (this.from != o.from)
            return false
        if (this.to != o.to)
            return false
        return true
    }

    override fun hashCode(): Int {
        val prime = 31
        var result = 1
        result = prime * result + (if (this.id == null) 0 else this.id.hashCode())
        result = prime * result + this.from.hashCode()
        result = prime * result + this.to.hashCode()
        return result
    }

    override fun toString(): String {
        val sb = StringBuilder("Email (")

        sb.append(id)
        sb.append(", ").append(from)
        sb.append(", ").append(to)

        sb.append(")")
        return sb.toString()
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    fun from(from: IEmail) {
        id = from.id
        from = from.from
        to = from.to
    }
}
