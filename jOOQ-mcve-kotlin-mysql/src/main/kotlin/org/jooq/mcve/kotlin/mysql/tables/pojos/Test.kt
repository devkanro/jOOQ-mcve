/*
 * This file is generated by jOOQ.
 */
package org.jooq.mcve.kotlin.mysql.tables.pojos


import org.jooq.mcve.kotlin.mysql.tables.interfaces.ITest


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
data class Test(
    override var id: Int? = null,
    override var cd: Int? = null
): ITest {


    override fun equals(other: Any?): Boolean {
        if (this === other)
            return true
        if (other == null)
            return false
        if (this::class != other::class)
            return false
        val o: Test = other as Test
        if (this.id == null) {
            if (o.id != null)
                return false
        }
        else if (this.id != o.id)
            return false
        if (this.cd == null) {
            if (o.cd != null)
                return false
        }
        else if (this.cd != o.cd)
            return false
        return true
    }

    override fun hashCode(): Int {
        val prime = 31
        var result = 1
        result = prime * result + (if (this.id == null) 0 else this.id.hashCode())
        result = prime * result + (if (this.cd == null) 0 else this.cd.hashCode())
        return result
    }

    override fun toString(): String {
        val sb = StringBuilder("Test (")

        sb.append(id)
        sb.append(", ").append(cd)

        sb.append(")")
        return sb.toString()
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    fun from(from: ITest) {
        id = from.id
        cd = from.cd
    }
}
